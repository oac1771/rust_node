version: '3'

tasks:
  start-local:
    cmds:
      - task: start-minikube
      - |
        task docker-build 
      - task: deploy-ecosystem
    env:
      BUILD: '{{ .BUILD }}'

  deploy-ecosystem:
    internal: true
    cmds:
      - helm upgrade --install --atomic --timeout 45s node-ecosystem helm_chart/
      - helm test node-ecosystem

  start-minikube:
    internal: true
    cmds:
      - minikube start --driver=docker --cpus=4 --memory=4000
      - minikube addons enable metrics-server
    status:
      - minikube status

  docker-build:
    cmds:
      - docker build -f docker/rust_node_builder.Dockerfile . -t rust_node_builder:latest
      - |
        docker run --rm -it -v "$(pwd)":/rust_node rust_node_builder:latest \
          /bin/bash -c 'source "$HOME/.cargo/env" && cargo build --target x86_64-unknown-linux-musl --release'
      - docker build -f docker/rust_node.Dockerfile . -t rust_node:latest
      - minikube image rm docker.io/library/rust_node:latest
      - minikube image load rust_node:latest
    env:
      BUILD: true
    status:
      - |
        if [ "$BUILD" != "true" ]
        then
          echo Skipping building Dockerfiles
          exit 0
        else
          echo Building Dockerfiles... 
          exit 1
        fi
