version: '3'

tasks:

  cargo-run:
    cmds:
      - cargo run
    env:
      PRIVATE_KEY: "0xac1e735be8536c6534bb4f17f06f6afc73b2b5ba84ac2cfb12f7461b20c0bbe3"
      ZKSYNC_API_URL: http://localhost:3050
      ZKSYNC_WS_URL: ws://localhost:3051
      IPFS_BASE_URL: http://localhost:5001

  pause:
    cmds:
      - docker pause $(docker ps -q --filter "name=kind-control-plane")
  
  unpause:
    cmds:
      - docker unpause $(docker ps -q --filter "name=kind-control-plane")

  destroy-local:
    cmds:
      - helm uninstall node-ecosystem --wait || true
      - kubectl delete pvc --all || true
      - kubectl delete pv --all || true
      - colima stop || true

  start-local:
    cmds:
      - task: start-colima
      - task build-images
      - task: deploy-ecosystem
    env:
      BUILD: '{{ .BUILD }}'

  deploy-ecosystem:
    cmds:
      - helm upgrade --install --wait --timeout 3m node-ecosystem helm_chart/
      - helm test node-ecosystem

  start-colima:
    cmds:
      - cp colima.yaml ~/.colima/_templates/colima.yaml
      - colima start --cpu 2 --memory 3 --runtime containerd --kubernetes
    status:
      - colima status

  build-images:
    cmds:
      # - docker build -f docker/rust_node_builder.Dockerfile . -t rust_node_builder:latest
      - nerdctl build -f docker/toolbox.Dockerfile . -t toolbox:latest --namespace k8s.io
      # - |
      #   docker run --rm -it -v "$(pwd)":/rust_node rust_node_builder:latest \
      #     /bin/bash -c 'source "$HOME/.cargo/env" && cargo build --target x86_64-unknown-linux-musl --release'
      # - docker build -f docker/rust_node.Dockerfile . -t rust_node:latest
    env:
      BUILD: true
    status:
      - |
        if [ "$BUILD" != "true" ]
        then
          echo Skipping building Dockerfiles
          exit 0
        else
          echo Building Dockerfiles... 
          exit 1
        fi
