This product could be a like cluster where each pins each others data to as backups for each other
    - look into if you can leverage zksync network to manage communication between nodes
    - smart contract deployed here that is basically a smart wallet that emits events when storing ipfs
        data. It basically stores ipfs hashes


ipfs api docs
http://docs.ipfs.tech.ipns.localhost:8080/reference/kubo/rpc/#getting-started
http://ipfscluster.io.ipns.localhost:8080/documentation/reference/api/
http://docs.ipfs.tech.ipns.localhost:8080/reference/kubo/rpc/#api-v0-bitswap-ledger


helpful commands:
ipfs repo gc
    - initiate garbage collection
ipfs pin ls 
    - list pinned files
curl -X POST -d '{"meta_data": "info", "data": {"foo": "hi"}}' http://localhost:8000/add/todo.txt

docker run -it rust_node:latest /bin/sh
example: curl -X POST http://127.0.0.1:5001/api/v0/id

Rough plan:

create helm chart for deploying to k8s
    - use alpine base image for node
    - for ipfs: https://hub.docker.com/r/ipfs/kubo/
    - can use k9s as a nice way to visualize stuff

set up smart contract deployed to local instance of chain
have containerized node talk to smart contract 

refactor ideas:
    - make responses from main.rs return error codes in terminal (echo $?) 
        - https://rocket.rs/v0.5-rc/guide/responses/#responder



gcc:latest 

mkdir musldist
PREFIX=$(pwd)/musldist
curl -O http://www.musl-libc.org/releases/musl-1.2.4.tar.gz
tar xf musl-1.2.4.tar.gz
cd musl-1.2.4/
./configure --disable-shared --prefix=$PREFIX
make
make install
cd ..
du -h musldist/lib/libc.a

curl -OL https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.0/llvm-16.0.0.src.tar.xz
tar xf llvm-16.0.0.src.tar.xz

curl -OL https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.0/libunwind-16.0.0.src.tar.xz 

curl -OL https://github.com/Kitware/CMake/releases/download/v3.26.4/cmake-3.26.4-linux-x86_64.tar.gz 

alias cmake=./../../../../cmake-3.26.4-linux-x86_64/bin/cmake